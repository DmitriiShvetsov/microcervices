version: '3.1'
services:

#  db:
#    image: postgres
#    restart: always
#    environment:
#      POSTGRES_USER: password
#      POSTGRES_PASSWORD: example
#
#  mongo:
#    image: mongo
#    restart: always
#    environment:
#      MONGO_INITDB_ROOT_USERNAME: root
#      MONGO_INITDB_ROOT_PASSWORD: example

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

#  prometheus:
#    image: docker.io/prom/prometheus:latest
#    hostname: prometheus
#    container_name: prometheus
#    ports:
#      - "9090:9090"
##    volumes:
##      - C:\Docker\jpoint\prometheus\prometheus.yml:/etc/prometheus/prometheus.yml
#
#  grafana:
#    image: docker.io/grafana/grafana:latest
#    hostname: grafana
#    container_name: grafana
#    ports:
#      - "3000:3000"
##    volumes:
##      - C:\Docker\jpoint\grafana\storage:/var/lib/grafana